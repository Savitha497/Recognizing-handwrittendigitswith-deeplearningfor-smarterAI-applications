# -*- coding: utf-8 -*-
"""Recognizing  handwrittendigitswith  deeplearningfor  smarterAI  applications

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uSobY-XGW93A3ZnZJJ73gamj9GgPmUGv
"""

import tensorflow as tf
from tensor toflow import keras
import numpy as np
import matplotlib.pyplot as plt

# Load the MNIST dataset
mnist = keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Normalize the data
x_train, x_test = x_train / 255.0, x_test / 255.0

# Build the model
model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dropout(0.2),
    keras.layers.Dense(10, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(x_train, y_train, epochs=5)

# Evaluate the model
test_loss, test_acc = model.evaluate(x_test, y_test)
print(f'\nTest accuracy: {test_acc:.4f}')

# Display some predictions
predictions = model.predict(x_test)

# Plot first few test images with predictions
fig, axes = plt.subplots(3, 3, figsize=(8, 8))
axes = axes.flatten()

for i, ax in enumerate(axes):
    ax.imshow(x_test[i], cmap='gray')
    ax.set_title(f"Pred: {np.argmax(predictions[i])}")
    ax.axis('off')

plt.tight_layout()
plt.show()